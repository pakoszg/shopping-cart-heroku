{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useAddToCart = () => {\n  _s();\n\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [items, setItems] = useState([]);\n\n  const updateTotalQuantity = () => {\n    if (items.length > 0) {\n      const total = items.map(item => item.quantity).reduce((acc, curVal) => acc + curVal);\n      setTotalQuantity(total);\n    } else {\n      setTotalQuantity(0);\n    }\n  };\n\n  const updateTotalPrice = () => {\n    if (items.length > 0) {\n      const total = items.map(item => item.price * item.quantity).reduce((acc, curVal) => acc + curVal);\n      setTotalPrice(total);\n    } else {\n      setTotalPrice(0);\n    }\n  };\n\n  const handleItems = (price, name, quantity) => {\n    setTotalQuantity(totalQuantity + 1);\n    const matchedArray = items.filter(obj => obj.name === name);\n    const [matchedObj] = matchedArray;\n    const restArray = items.filter(item => item.name !== name);\n\n    if (matchedArray.length === 0) {\n      setItems(items => {\n        return [...items, {\n          name: name,\n          price: price,\n          quantity: quantity || 1,\n          id: restArray.length + 1\n        }];\n      });\n    } else {\n      setItems([...(restArray.length !== 0 ? restArray : []), {\n        name: name,\n        price: matchedObj.price,\n        quantity: matchedObj.quantity + 1,\n        id: matchedObj.id\n      }]);\n    }\n  };\n\n  const changeQuantity = (name, value) => {\n    const item = items.find(item => item.name === name);\n    const restArray = items.filter(item => item.name !== name);\n\n    if (value > 0) {\n      setItems([...(restArray.length !== 0 ? restArray : []), {\n        name: name,\n        price: item.price,\n        quantity: value,\n        id: item.id\n      }]);\n    } else {\n      setItems([...(restArray.length !== 0 ? restArray : [])]);\n    }\n  };\n\n  const deleteItem = name => {\n    const restArray = items.filter(item => item.name !== name);\n    setItems([...(restArray.length !== 0 ? restArray : [])]);\n  };\n\n  return {\n    totalQuantity,\n    handleItems,\n    items,\n    changeQuantity,\n    deleteItem,\n    totalPrice,\n    updateTotalPrice,\n    updateTotalQuantity\n  };\n};\n\n_s(useAddToCart, \"W++xvEqWOymUyibhSHp18Ry7zXk=\");\n\nexport default useAddToCart;","map":{"version":3,"sources":["/Users/pg/code/codingpractice/strapi/shopping-cart/frontend/src/components/useAddToCart.js"],"names":["useState","useAddToCart","totalQuantity","setTotalQuantity","totalPrice","setTotalPrice","items","setItems","updateTotalQuantity","length","total","map","item","quantity","reduce","acc","curVal","updateTotalPrice","price","handleItems","name","matchedArray","filter","obj","matchedObj","restArray","id","changeQuantity","value","find","deleteItem"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nconst useAddToCart = () => {\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [items, setItems] = useState([]);\n\n  const updateTotalQuantity = () => {\n    if (items.length > 0) {\n      const total = items\n        .map((item) => item.quantity)\n        .reduce((acc, curVal) => acc + curVal);\n\n      setTotalQuantity(total);\n    } else {\n      setTotalQuantity(0);\n    }\n  };\n\n  const updateTotalPrice = () => {\n    if (items.length > 0) {\n      const total = items\n        .map((item) => item.price * item.quantity)\n        .reduce((acc, curVal) => acc + curVal);\n\n      setTotalPrice(total);\n    } else {\n      setTotalPrice(0);\n    }\n  };\n\n  const handleItems = (price, name, quantity) => {\n    setTotalQuantity(totalQuantity + 1);\n    const matchedArray = items.filter((obj) => obj.name === name);\n    const [matchedObj] = matchedArray;\n    const restArray = items.filter((item) => item.name !== name);\n\n    if (matchedArray.length === 0) {\n      setItems((items) => {\n        return [\n          ...items,\n          {\n            name: name,\n            price: price,\n            quantity: quantity || 1,\n            id: restArray.length + 1,\n          },\n        ];\n      });\n    } else {\n      setItems([\n        ...(restArray.length !== 0 ? restArray : []),\n        {\n          name: name,\n          price: matchedObj.price,\n          quantity: matchedObj.quantity + 1,\n          id: matchedObj.id,\n        },\n      ]);\n    }\n  };\n\n  const changeQuantity = (name, value) => {\n    const item = items.find((item) => item.name === name);\n    const restArray = items.filter((item) => item.name !== name);\n    if (value > 0) {\n      setItems([\n        ...(restArray.length !== 0 ? restArray : []),\n        {\n          name: name,\n          price: item.price,\n          quantity: value,\n          id: item.id,\n        },\n      ]);\n    } else {\n      setItems([...(restArray.length !== 0 ? restArray : [])]);\n    }\n  };\n\n  const deleteItem = (name) => {\n    const restArray = items.filter((item) => item.name !== name);\n    setItems([...(restArray.length !== 0 ? restArray : [])]);\n  };\n\n  return {\n    totalQuantity,\n    handleItems,\n    items,\n    changeQuantity,\n    deleteItem,\n    totalPrice,\n    updateTotalPrice,\n    updateTotalQuantity,\n  };\n};\n\nexport default useAddToCart;\n"]},"metadata":{},"sourceType":"module"}